name: Update SDK Dependencies

on:
  push:
    branches:
      - master

jobs:
  update_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Fetch Latest Package Version
        id: fetch_version
        run: echo "LATEST_VERSION=$(npm show @0x69123/my-package version)" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"

      - name: Configure Git User
        run: |
          git config --global user.email "${{ secrets.EMAIL }}"
          git config --global user.name "${{ secrets.NAME }}"

      - name: Update SDK Repositories and Create Pull Requests
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          LATEST_VERSION: ${{ steps.fetch_version.outputs.LATEST_VERSION }}
        run: |
          for SDK_REPO in "Ok69123/test-hello-world-2"; do  
            REMOTE_REPO="https://x-access-token:${GITHUB_TOKEN}@github.com/${SDK_REPO}.git" 
            git clone "$REMOTE_REPO" sdk_temp
            cd sdk_temp
            yarn add @0x69123/my-package@${{ env.LATEST_VERSION }} # Use env variable
            yarn install       
            git checkout -b update-my-package-${{ env.LATEST_VERSION }} 
            git add package*.json yarn.lock
            git commit -m "Update @0x69123/my-package to ${{ env.LATEST_VERSION }}"
            git push origin update-my-package-${{ env.LATEST_VERSION }} 

            # Create Pull Request
            gh pr create --base main \
                        --head update-my-package-${{ env.LATEST_VERSION }} \
                        --title "Update @0x69123/my-package to ${{ env.LATEST_VERSION }}" \
                        --body "Automated update of @0x69123/my-package dependency to ${{ env.LATEST_VERSION }}" 
            
            cd ..
            rm -rf sdk_temp
          done
